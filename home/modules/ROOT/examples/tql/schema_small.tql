define
  entity content @abstract,
    owns id @key;
  entity page @abstract, sub content,
    owns page-id,
    owns name,
    owns bio,
    owns profile-picture,
    plays posting:page,
    plays following:page;
  entity profile @abstract, sub page,
    owns username,
    owns name @card(0..3),
    plays group-membership:member,
    plays location:located,
    plays content-engagement:author,
    plays following:follower;
  entity user sub profile,
    owns email,
    owns phone @regex("^\d{8,15}$") @unique,
    owns karma,
    owns relationship-status,
    plays friendship:friend,
    plays family:relative,
    plays relationship:partner,
    plays marriage:spouse,
    plays employment:employee;
  relation social-relation @abstract,
    relates related @card(0..);
  relation friendship sub social-relation,
    relates friend as related @card(0..);
  relation family sub social-relation,
    relates relative as related @card(0..1000);
  relation relationship sub social-relation,
    relates partner as related,
    owns start-date;
  relation marriage sub relationship,
    relates spouse as partner,
    owns exact-date,
    plays location:located;
  entity organisation sub profile,
    owns tag @card(0..100),
    plays employment:employer;
  entity company sub organisation;
  entity charity sub organisation;
  relation employment,
    relates employer,
    relates employee,
    owns start-date,
    owns end-date;
  entity group sub page,
    owns group-id,
    owns tag @card(0..100),
    plays group-membership:group;
  relation group-membership,
    relates group,
    relates member,
    owns start-timestamp,
    owns end-timestamp;
  entity post @abstract, sub content,
    owns post-id,
    owns post-text,
    owns creation-timestamp @range(1970-01-01T00:00:00..),
    owns tag @card(0..10),
    plays posting:post,
    plays commenting:parent,
    plays reaction:parent,
    plays location:located;
  entity text-post sub post;
  entity image-post sub post,
    owns post-image;
  entity comment sub content,
    owns comment-id,
    owns comment-text,
    owns creation-timestamp,
    owns tag @card(0..5),
    plays commenting:comment,
    plays commenting:parent,
    plays reaction:parent;
  relation interaction @abstract,
    relates subject @abstract,
    relates content;
  relation content-engagement @abstract, sub interaction,
    relates author as subject;
  relation posting sub content-engagement,
    relates page as content,
    relates post @card(0..1000);
  relation commenting sub content-engagement,
    relates parent as content,
    relates comment;
  relation reaction sub content-engagement,
    relates parent as content,
    owns emoji @values("like", "love", "funny", "surprise", "sad", "angry"),
    owns creation-timestamp;
  relation following,
    relates follower,
    relates page;
  entity place,
    owns place-id,
    owns name,
    plays location:place;
  entity country sub place,
    plays city-location:parent;
  entity city sub place,
    plays city-location:city;
  relation location,
    relates place,
    relates located;
  relation city-location sub location,
    relates parent as place,
    relates city as located;
  # attributes
  attribute id @abstract, value string;
  attribute page-id @abstract, sub id;
  attribute username sub page-id;
  attribute group-id sub page-id;
  attribute post-id sub id;
  attribute comment-id sub id;
  attribute place-id sub id;
  attribute name value string;
  attribute email value string @regex("^.*@\w+\.\w+$");
  attribute phone value string;
  attribute karma value double;
  attribute relationship-status value string @values("single", "married", "other");
  attribute latitude value double;
  attribute longitude value double;
  attribute event-date @abstract, value datetime;
  attribute start-date sub event-date;
  attribute end-date sub event-date;
  attribute exact-date @abstract, sub event-date;
  attribute payload @abstract, value string;
  attribute text-payload @abstract, sub payload;
  attribute image-payload @abstract, sub payload;
  attribute bio sub text-payload;
  attribute comment-text sub text-payload;
  attribute post-text sub text-payload;
  attribute post-image sub image-payload;
  attribute profile-picture sub image-payload;
  attribute tag value string;
  attribute emoji value string;
  attribute creation-timestamp value datetime;
  attribute start-timestamp value datetime;
  attribute end-timestamp value datetime;
  # functions
  fun all_relatives($user: user) -> { user }:
    match
      $relative isa user;
      {
        family (relative: $user, relative: $relative);
      } or {
        let $intermediate in all_relatives($user);
        family (relative: $intermediate, relative: $relative);
      };
      return { $relative };